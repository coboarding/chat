# ========================
# Application Settings
# ========================

# Application Environment
# ----------------------
# Set to 'development', 'staging', or 'production'
ENVIRONMENT=development

# Debug Mode
# ---------
# Set to True for development, False in production
DEBUG=True

# Secret Key
# ---------
# Generate a secure secret key (e.g., `openssl rand -hex 32`)
SECRET_KEY=your-secret-key-here

# Security
# --------
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=1440  # 24 hours

# ========================
# Database Configuration
# ========================


# PostgreSQL (production)
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_DB=coboarding
POSTGRES_HOST=localhost
POSTGRES_PORT=5432

# SQLite (development)
SQLITE_DB=sqlite:///./coboarding.db

# ========================
# AI/ML Configuration
# ========================


# Ollama Settings
# --------------
OLLAMA_BASE_URL=http://localhost:11434
OLLAMA_MODEL=mistral:latest
OLLAMA_EMBEDDING_MODEL=all-minilm

# LLM Settings
# -----------
LLM_TEMPERATURE=0.7
LLM_MAX_TOKENS=2000
LLM_TOP_P=0.9

# CV Processing
# ------------
CV_PROCESSING_TIMEOUT=300  # seconds
MAX_CV_SIZE_MB=10
ALLOWED_FILE_TYPES=application/pdf,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document,text/plain,image/jpeg,image/png

# ========================
# API & Web Configuration
# ========================


# Server
# ------
HOST=0.0.0.0
PORT=8000
WORKERS=4

# CORS (comma-separated list of allowed origins)
CORS_ORIGINS=http://localhost:8501,http://localhost:3000,http://localhost:8000

# Frontend
# --------
FRONTEND_URL=http://localhost:3000
STREAMLIT_SERVER_PORT=8501

# ========================
# Email Configuration
# ========================


# SMTP Settings
# ------------
SMTP_SERVER=smtp.example.com
SMTP_PORT=587
SMTP_USERNAME=your-email@example.com
SMTP_PASSWORD=your-email-password
EMAIL_FROM=noreply@coboarding.app
EMAIL_FROM_NAME="coBoarding Team"

# Email Verification
# -----------------
EMAIL_VERIFICATION_ENABLED=True
EMAIL_VERIFICATION_EXPIRE_HOURS=24

# ========================
# File Storage
# ========================

# Local Storage
# -------------
UPLOAD_FOLDER=./uploads
MAX_CONTENT_LENGTH=10485760  # 10MB

# AWS S3 (if using S3)
# -------------------
AWS_ACCESS_KEY_ID=your-access-key
AWS_SECRET_ACCESS_KEY=your-secret-key
AWS_STORAGE_BUCKET_NAME=your-bucket-name
AWS_S3_REGION=eu-central-1
AWS_S3_ENDPOINT_URL=  # Leave empty for AWS default
USE_S3_STORAGE=False

# ========================
# Logging
# ========================
LOG_LEVEL=INFO
LOG_FORMAT=%(asctime)s - %(name)s - %(levelname)s - %(message)s
LOG_FILE=logs/app.log

# ========================
# Feature Flags
# ========================
FEATURE_EMAIL_NOTIFICATIONS=True
FEATURE_SMS_NOTIFICATIONS=False
FEATURE_WHATSAPP_NOTIFICATIONS=False
FEATURE_AI_MATCHING=True
FEATURE_CV_PARSING=True

# ========================
# Third-party Integrations
# ========================

# Google OAuth
# ------------
GOOGLE_CLIENT_ID=your-google-client-id
GOOGLE_CLIENT_SECRET=your-google-client-secret
GOOGLE_REDIRECT_URI=http://localhost:8000/auth/google/callback

# LinkedIn OAuth
# -------------
LINKEDIN_CLIENT_ID=your-linkedin-client-id
LINKEDIN_CLIENT_SECRET=your-linkedin-client-secret
LINKEDIN_REDIRECT_URI=http://localhost:8000/auth/linkedin/callback

# ========================
# Rate Limiting
# ========================
RATE_LIMIT_ENABLED=True
RATE_LIMIT_DEFAULT=100/minute
RATE_LIMIT_AUTH=20/minute

# ========================
# Monitoring
# ========================
SENTRY_DSN=your-sentry-dsn
NEW_RELIC_LICENSE_KEY=your-newrelic-license-key

# ========================
# Testing
# ========================
TEST_DATABASE_URL=sqlite:///./test.db
PYTEST_ADDOPTS=-v --cov=app --cov-report=term-missing

# ========================
# Development Overrides
# ========================
if [ "$ENVIRONMENT" = "development" ]; then
    # Development-specific overrides
    DEBUG=True
    DATABASE_URL=$SQLITE_DB
    LOG_LEVEL=DEBUG
    
    # Disable rate limiting in development
    RATE_LIMIT_ENABLED=False
    
    # Use console email backend
    EMAIL_BACKEND=console
    
    # Disable SSL verification for local development
    REQUESTS_CA_BUNDLE=""
    CURL_CA_BUNDLE=""
fi

# Production overrides
if [ "$ENVIRONMENT" = "production" ]; then
    # Force secure settings in production
    DEBUG=False
    SECURE_SSL_REDIRECT=True
    SESSION_COOKIE_SECURE=True
    CSRF_COOKIE_SECURE=True
    
    # Use production database
    DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
    
    # Use file email backend in production
    EMAIL_BACKEND=file
    
    # Enable all security features
    SECURE_HSTS_SECONDS=31536000  # 1 year
    SECURE_HSTS_INCLUDE_SUBDOMAINS=True
    SECURE_CONTENT_TYPE_NOSNIFF=True
    X_FRAME_OPTIONS=DENY
fi
